version "4.7"

class ScarcityHandler : EventHandler
{
	enum ScarcityToggleFlags
	{
		STF_Ammo = 1,
		STF_AmmoBulk = 2,
		STF_Mags = 4,
		STF_AmmoBoxes = 8,
		STF_Supplies = 16,
		STF_Armors = 32,
		STF_EnemyDrops = 64
	}

	override void WorldThingSpawned(WorldEvent e)
	{
		if (level.MapName ~== "LOTSAGUN")
		{
			return;
		}

		double perc = clamp(frandom(scarcity_percentage_min, scarcity_percentage_max), 0, 1.0);
		int toggles = scarcity_toggles;

		if (e.Thing is 'HDMobBase' && toggles & STF_EnemyDrops)
		{
			if (perc == 0 || ShouldRemove(perc))
			{
				HDMobBase(e.Thing).bHASDROPPED = true;
				return;
			}
		}

		if (level.time > 3)
		{
			return;
		}

		if (toggles & STF_Supplies && (e.Thing is 'PortableMedikit' || e.Thing is 'HDInjectorMaker') || toggles & STF_AmmoBoxes && e.Thing is 'HDAmBox')
		{
			if (perc == 0 || ShouldRemove(perc))
			{
				e.Thing.Destroy();
			}
			return;
		}

		let am = HDAmmo(e.Thing);
		if (am)
		{
			let mag = HDMagAmmo(am);
			if (mag && mag.Mags.Size() > 0)
			{
				bool arm = mag is 'HDArmour';
				if (arm && toggles & STF_Armors || !arm && toggles & STF_Mags)
				{
					if (arm && mag.Mags[0] > 1000)
					{
						int realAmt = mag.Mags[0] - 1000;
						mag.Mags[0] = 1000 + int(realAmt * perc);
					}
					else
					{
						mag.Mags[0] = int(mag.Mags[0] * perc);
					}

					if (arm && mag.Mags[0] % 1000 == 0)
					{
						mag.Destroy();
						return;
					}
				}
			}
			else if (toggles & STF_Ammo)
			{
				// [Ace] For singular items, make it a chance to remove the item, otherwise anything that's isn't 1.0 will remove it as it will get trunctated to 0.
				if (am.Amount == 1)
				{
					if (ShouldRemove(perc))
					{
						am.Destroy();
						return;
					}
				}
				else
				{
					am.Amount = int(am.Amount * perc);
					if (am.Amount == 0)
					{
						am.Destroy();
						return;
					}
				}
			}
			return;
		}
		
		if (toggles & STF_AmmoBulk)
		{
			let upkp = HDUPK(e.Thing);
			if (upkp && upkp.pickuptype is 'HDAmmo')
			{
				upkp.amount = int(upkp.amount * perc);
				if (upkp.amount == 0)
				{
					upkp.Destroy();
					return;
				}
				return;
			}
		}
	}

	private bool ShouldRemove(double perc)
	{
		return frandom(0.01, 1.0) <= 1.0 - perc;
	}
}